#!/usr/bin/env python
#####################
#
# production_info
#
# Script to retrieve information
# relating to production ntuples
#
# Author: Matt Mottram
#         <m.mottram@sussex.ac.uk>
#
#####################

import database
import list_generator as lg
import info_generator as ig
try:
    import argparse
except:
    raise ImportError("argparse not available; python version needs to be 2.7+")


if __name__=="__main__":
    parser = argparse.ArgumentParser(description="Production information generator.  Users MUST specify either a label (-l, recommended) or rat version (-v).")
    parser.add_argument("-d", dest="db_name", help="Data-flow database name [data-production]",
                        default="data-production")
    parser.add_argument("-s", dest="db_server",
                        help="Data-flow database server [couch.snopl.us]",
                        default="couch.snopl.us")
    parser.add_argument("-p", dest="db_port",
                        help="Data-flow database server port [None]", default=None, type=int)
    parser.add_argument("-f", dest="file_type",
                        help="[ntuple], %s datasets" % (", ".join(f for f in lg.allowed_file_types if f!="ntuple")),
                        default="ntuple")
    parser.add_argument("-o", dest="output", help="Filename to write the list to [fileinfo.tsv]",
                        default="fileinfo.tsv")
    
    parser.add_argument("-m", dest="module", help="Requested module, format -m mod1 mod2 ... (blank for all)", nargs="+")
    parser.add_argument("-r", dest="run_range", help="Requested run range, format -r low high (blank for all)", type=int, nargs='+')
    parser.add_argument("-i", dest="fields", help="Information fields requested for the given modules [sim_entries]", nargs="+", default=['sim_entries'])
    
    group = parser.add_mutually_exclusive_group()
    group.add_argument("-l", dest="label", help="Requested production label (recommended)")   
    group.add_argument("-v", dest="version", help="Requested RAT version")
    
    parser.add_argument("--fields", dest="list_fields", help="List allowed field values", action="store_true")

    ig.generate_info(parser)
